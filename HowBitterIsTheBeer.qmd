---
title: "How Bitter Is The Beer"
format: html
echo: true
---

```{r}
install.packages("tidyverse")
library(tidyverse)
install.packages("ggplot2")
library(ggplot2)
```

```{r}

```

# **Introduction**

How Bitter is the Beer is data set provided by Kaggle competition host Dennis Sun. The data set contains 10 variables of 6,000 observations to predict the International Bittering Units (IBU) of a beer. Eights variables are used as potential IBU predictors, while the remaining two are an ID column and IBU. In this report we will conduct an exploratory data analysis examining which predictors we should consider in trying to predict IBU of a given beer.

```{r}
beerdf = read.csv("beer_train.csv")
#head(beerdf)
View(beerdf)
dim(beerdf)
colnames(beerdf)
```

Uploading our data we verify our data dimensions are 6,000x10 with 9 variables (exluding obervation identifier). The 9 variables are:

abv - Alcohol by Volume (ABV) measures the amount of alcohol in a beverage.

available - Time of year the beer is available.

description - Description of the beer provided by the makers of the beer.

glass - The type of glass the beer is intended to be served in

ibu - International Bittering Units (IBU) measures the bitterness of beer.

isOrganic - Identifies if the beer is organic by Yes (Y) or No(N).

name - Name of beer brand or beer type when brand is not given.

originalGravity - Original Gravity (OG) measures the density of a beer wort before fermintation.

srm - Standard Reference Method (SRM) measures a beers color.

# **Data Cleaning**

To conduct a meaning full analysis we will need to convert categorical data to numerical values where appropriate. We will begin by changing "isOrganic" variables to binary variables. All responses labeled as Yes are set equal to 1 and No responses set equal to 0.

-   Yes = 1

-   No = 0

```{r}
#table(beerdf$isOrganic)
beerdf$isOrganic[which(beerdf$isOrganic=="Y")] <- 1

beerdf$isOrganic[which(beerdf$isOrganic=="N")] <- 0

beerdf$isOrganic <- as.numeric(beerdf$isOrganic)

View(beerdf)
#table(beerdf$isOrganic)
```

Our next step is to remove unnecessary predictors from our data set. By visually observing of our data set we can see the variable glass contains missing values. This seems concerning so we will count the exact number of missing response.

```{r}
# Number of missing data values in glass 
sum(beerdf$glass == "")
```

By computing the sum of cells with no response we can observe that there are 2342 missing values for glass type. We will exclude glass as it has over a third missing observations.

In addition we can remove the descriptive and nominal variables from the original data. These include; available, description and name. Availability of a beer and description contain too many categories and cannot be converted into numeric values for a meaningful analysis. The variables name is a nominal data type that does not influence the IBU of a given beer and contains a large amount of unique categories that would limit analysis.

```{r}
beerdf_new <- subset(beerdf, select = -c(available, description, glass, name))

View(beerdf_new)
dim(beerdf_new)
colnames(beerdf_new)
```

Now lets run some summary stats on our cleaned data set.

```{r}
summary(beerdf_new)
typeof(beerdf_new)
```

```{r}
# IBU Histogram
ggplot(data = beerdf_new, aes(x = ibu)) +
  geom_histogram(binwidth = 100) +
  labs(title = "Histogram of IBU", x = "IBU", y = "Count")
```

```{r}
ggplot(data = beerdf_new, aes(x = ibu)) +
  geom_histogram()
```

From our summary stats and histogram we can observe some potential outliers in our variable IBU. It's first quartile equal to 22 and third quartile equal to 33 with a maximum value of 1,000. Lets compute some boxplots to further analyze the outliers that exist.

```{r}
# Observing Outliers visullay for IBU using Bolxplot
ggplot(data = beerdf_new, aes(y = ibu)) +
  geom_boxplot() +
  labs(title = "Boxplot of IBU", y = "IBU")
```

Observing the data set beerdf_new, the variable column srm contains some strings where srm is over 40. To determine if removing these data is resonable we will make a pie chart showing the ratio of values that are numerical and the amount that are strings representing srm over 40.

```{r}
sum(beerdf_new$srm == "Over 40")
```

```{r}
# Number of observations in srm with string value "over 40"
sum(beerdf_new$srm == "Over 40")

beerdf_new$srm[which(beerdf_new$srm=="Y")] <- 1
beerdf_new$isOrganic[which(beerdf_new$isOrganic=="Y")] <- 1

#beerdf_new$srm <- as.data.frame(beerdf_new$srm == "Over 40", "String", "Numerical")

#class_counts <- table(beerdf$srm)
#print(class_counts)

pie(table(beerdf$srm), names(table(beerdf$srm)))
```

```{r}
```

```{r}
boxplot(beerdf_new$abv)
#hist(beerdf_new$abv, main = "Histogram of ABV", xlab = "ABV", ylab = "Frequency")
```

```{r}
boxplot(beerdf_new$ibu)
#hist(beerdf_new$ibu, main = "Histogram of IBU", xlab = "IBU", ylab = "Frequency")
```

Generating the IBU histogram, we can observe at least one extream outlier in our data set. We will remove these outliers

```{r}
ggplot(data = beerdf_new, aes(x = ibu)) +
  geom_histogram()
```